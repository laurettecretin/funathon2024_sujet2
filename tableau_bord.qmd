---
title: "Super tableau de bord"
editor: source
author: moi-même
format: 
  dashboard:
    scrolling: true
execute:
  echo: false
server: shiny
---

```{r}
#| context: setup
#| message: false
#| echo: false
#| warning: false

library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(sf)
library(lubridate)
library(glue)
library(ggplot2)
library(ggpattern)
library(plotly)
library(gt)
library(forcats)
library(leaflet)
library(shiny)
library(shinydashboard)
source("fonctions/import_donnees.R")
source("fonctions/calcul_stat.R")

urls_donnees <- creer_liste_donnees("sources.yml")
donnees_aeroports <- importer_donnees_aeroports(unlist(urls_donnees$airports))
localisation_aeroports <- st_read(urls_donnees$geojson$airport, quiet = TRUE)
```

# {.sidebar}

![](img/cockpit.png){width="80%"}



```{r}
liste_annees = donnees_aeroports |> 
  distinct(annee) |> 
  pull()

selectInput('annee', 'Année :', liste_annees, selected = 2018) 


```


# Vue d'ensemble

## Row {height="10%"}
```{r}
valueBoxOutput("vbox_depart")
```

```{r}
valueBoxOutput("vbox_arrivee")
```

```{r}
valueBoxOutput("vbox_transit")
```

## Row {height="45%"}
```{r}
plotOutput('plot')
```

```{r}
gt_output('tableau')
```



## Row {height="45%"}
```{r}
leafletOutput("carte")
```



# Détails

## {.toolbar} {height="10%"}

```{r}
liste_aeroports = donnees_aeroports |> 
  distinct(nom_aeroport) |> 
  arrange(nom_aeroport) |> 
  pull()

selectInput('choix_aeroport', 
            'Aéroport choisi :', 
            liste_aeroports, 
            selected = liste_aeroports[1]) 

```

## Row {height="10%"}

```{r}
valueBoxOutput("vbox_depart_detail")
```

```{r}
valueBoxOutput("vbox_arrivee_detail")
```

```{r}
valueBoxOutput("vbox_transit_detail")
```


## Row {height="60%"}
```{r}
plotOutput("plot_aero")
```






```{r}
#| context: server


# 1 - vue d'ensemble
donnees_filtrees <- reactive({
  donnees_aeroports |>
    filter(annee == input$annee)
})

stat_passagers <- reactive({
  donnees_filtrees() |>
    summarise(paxdep = sum(apt_pax_dep, na.rm = TRUE),
              paxarr = sum(apt_pax_arr, na.rm = TRUE),
              paxtra = sum(apt_pax_tr, na.rm = TRUE))
  })

# création des valuebox
n_passagers_depart <- reactive({
  stat_passagers() |>
    pull(paxdep) |> 
    format(scientific = FALSE, big.mark = " ")
  })

output$vbox_depart <- renderValueBox({
    valueBox(
      "Départs",
      n_passagers_depart(),
      icon = icon("credit-card")
    )
  })

n_passagers_arrivee <- reactive({
  stat_passagers() |>
    pull(paxarr) |> 
    format(scientific = FALSE, big.mark = " ")
})

output$vbox_arrivee <- renderValueBox({
    valueBox(
      "Arrivées",
      n_passagers_arrivee(),
      icon = icon("credit-card")
    )
  })

n_passagers_transit <- reactive({
  stat_passagers() |>
    pull(paxtra) |> 
    format(scientific = FALSE, big.mark = " ")
  })

output$vbox_transit <- renderValueBox({
    valueBox(
      "Transit",
      n_passagers_transit(),
      icon = icon("arrow-repeat")
    )
  })


# 2 - détail par aéroport
stat_passagers_aero <- reactive({
  donnees_filtrees() |> 
    filter(nom_aeroport == input$choix_aeroport) |> 
    summarise(paxdep = sum(apt_pax_dep, na.rm = TRUE),
              paxarr = sum(apt_pax_arr, na.rm = TRUE),
              paxtra = sum(apt_pax_tr, na.rm = TRUE))
})


# création des valuebox
n_passagers_depart_detail <- reactive({
  stat_passagers_aero() |>
    pull(paxdep) |> 
    format(scientific = FALSE, big.mark = " ")
  })

output$vbox_depart_detail <- renderValueBox({
    valueBox(
      "Départs",
      n_passagers_depart_detail(),
      icon = icon("credit-card")
    )
  })

n_passagers_arrivee_detail <- reactive({
  stat_passagers_aero() |>
    pull(paxarr) |> 
    format(scientific = FALSE, big.mark = " ")
})

output$vbox_arrivee_detail <- renderValueBox({
    valueBox(
      "Arrivées",
      n_passagers_arrivee_detail(),
      icon = icon("credit-card")
    )
  })

n_passagers_transit_detail <- reactive({
  stat_passagers_aero() |>
    pull(paxtra) |> 
    format(scientific = FALSE, big.mark = " ")
  })

output$vbox_transit_detail <- renderValueBox({
    valueBox(
      "Transit",
      n_passagers_transit_detail(),
      icon = icon("arrow-repeat")
    )
  })



output$plot <- renderPlot({
  
  donnees_aeroports |> 
    plot_aeroports_top10(input$annee)
  
})

output$tableau <- render_gt(
      donnees_aeroports |> 
        creer_tableau(input$annee)
  )

output$carte <- renderLeaflet({
  donnees_aeroports |> 
    creer_carte_interactive(localisation_aeroports, input$annee)
})

output$plot_aero <- renderPlot({
  
  donnees_aeroports |> 
    plot_aeroport(input$choix_aeroport)
  
})
```
